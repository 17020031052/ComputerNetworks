

概述

Iperf是测量网络带宽的常用工具。您将使用套接字用Java编写自己版本的这个工具。然后，您将使用您的工具来测量Mininet中虚拟网络的性能，并解释链接特性和多路复用如何影响性能。

第一步:写Iperfer

步骤2:Mininet教程

第三步:在Mininet中测量

提交说明

学习成果

完成本程式设计作业后，学生应能:

•编写使用套接字在网络上传输和接收数据的应用程序

•描述如何度量延迟和吞吐量

•解释链路特性和多路复用如何影响延迟和吞吐量

澄清

•Iperfer服务器应该在处理来自客户机的一个连接后关闭。

________________________________________

第一步:写Iperfer

作业的第一步，您将编写自己版本的iperf来测量网络带宽。您的工具名为Iperfer，它将使用套接字在一对主机之间发送和接收TCP数据包。



注意:学习Java套接字程序的一个很好的资源和起点是Java套接字教程。



在客户端模式下运行时，Iperfer会将TCP数据包发送到指定时间窗口的特定主机，并跟踪在该时间帧内发送了多少数据;它将根据运行时间内发送的数据量计算和显示带宽。
在服务器模式下运行时，Iperfer将接收TCP数据包，并跟踪在连接期间接收了多少数据;它将根据接收到的数据量以及接收到的数据的第一个字节和最后一个字节之间的时间间隔来计算和显示带宽。

客户端模式

要在客户端模式下操作Iperfer，应调用如下:

java Iperfer -c -h <服务器主机名> -p <服务器端口> -t <时间>

•-c表示这是应该生成数据的iperf客户机

•服务器主机名是将使用数据的iperf服务器的主机名或IP地址

•服务器端口是远程主机等待使用数据的端口;端口范围为1024≤服务器端口≤65535

•时间是应该为其生成数据的持续时间(以秒为单位)

您可以使用-c选项来确定Iperfer应该在客户端模式下运行。

如有任何参数遗失或提供额外参数，请列印以下文件，然后退出:

错误:缺少或附加参数

如果服务器端口参数小于1024或大于65535，则应打印以下命令并退出:

错误:端口号必须在1024到65535之间

当作为客户端运行时，Iperfer必须与服务器建立TCP连接，并在时间秒内尽可能快地发送数据。数据应该以1000字节为单位发送，并且所有数据都应该为零。保持发送字节数的运行总数。

时间秒过后，Iperfer必须停止发送数据并关闭连接。Iperfer必须打印一行摘要，其中包括:

•发送的字节总数(单位为千字节)

•传输速率(以兆比特每秒(Mbps)为单位)

例如:

发送=6543 KB速率=5.234 Mbps

您应该假设1kb (KB) = 1000字节(B)和1mb (MB) = 1000 KB。一如既往，1字节(B) = 8位(B)。

服务器模式

要在服务器模式下操作Iperfer，应调用如下:

java Iperfer -s -p <监听端口>

•-s表示这是应该使用数据的iperf服务器

•监听端口是主机等待使用数据的端口;端口应在1024≤监听端口≤65535范围内

您可以使用-s选项的存在来确定Iperfer应该在客户端模式下运行。

如果缺少参数或提供其他参数，应打印以下命令并退出:

错误:缺少或附加参数

如果监听端口参数小于1024或大于65535，则应打印以下命令并退出:

错误:端口号必须在1024到65535之间

当作为服务器运行时，Iperfer必须侦听来自客户机的TCP连接，并尽可能快地接收数据，直到客户机关闭连接。数据应该以1000字节为单位读取。保持接收到的字节数的运行总数。

客户端关闭连接后，Iperfer必须打印一行摘要，其中包括:

•接收的字节总数(单位为千字节)

•读取流量的速率(单位为兆比特每秒(Mbps))

例如:

发送=6543 KB速率=5.234 Mbps

您应该假设1kb (KB) = 1000字节(B)和1mb (MB) = 1000 KB。一如既往，1字节(B) = 8位(B)。

服务器模式

要在服务器模式下操作Iperfer，应调用如下:

java Iperfer -s -p <监听端口>

•-s表示这是应该使用数据的iperf服务器

•监听端口是主机等待使用数据的端口;端口应在1024≤监听端口≤65535范围内

您可以使用-s选项的存在来确定Iperfer应该在客户端模式下运行。

如果缺少参数或提供其他参数，应打印以下命令并退出:

错误:缺少或附加参数

如果监听端口参数小于1024或大于65535，则应打印以下命令并退出:

错误:端口号必须在1024到65535之间

当作为服务器运行时，Iperfer必须侦听来自客户机的TCP连接，并尽可能快地接收数据，直到客户机关闭连接。数据应该以1000字节为单位读取。保持接收到的字节数的运行总数。

客户端关闭连接后，Iperfer必须打印一行摘要，其中包括:

•接收的字节总数(单位为千字节)

•读取流量的速率(单位为兆比特每秒(Mbps))

例如:

接收速率=6543 KB =4.758 Mbps

Iperfer服务器应该在处理来自客户机的一个连接之后关闭。

测试(你必须按时当面向TA展示这个!)

您可以在任何可以访问的机器上测试Iperfer。

在服务器上接收的字节数应该与从客户机发送的字节数相同。但是，服务器上的计时可能与客户机上的计时不完全匹配。因此，客户机和服务器报告的带宽可能略有不同;一般来说，它们之间的差异不应超过2mbps。注意，此行为反映了实际iperf工具的行为。

________________________________________

步骤2:Mininet教程

对于作业的第三步，您将学习如何使用Mininet创建虚拟网络并运行简单的实验。根据Mininet网站，Mininet创建了一个真实的虚拟网络，在一台机器(VM或本机)上运行真实的内核、交换机和应用程序代码，只需一个命令，几秒钟内即可完成。我们将在整个学期的编程作业中使用Mininet。

1.我们建议您先安装Ubuntu。然后:

cd ~

sudo apt-get安装mininet

2.您也可以使用我们提供的Ubuntu14+mininet图像。您可以从https://jbox.sjtu.edu.cn/l/Ou6HKO下载，密码是123456。我们已经安装了pip，您可以使用sudo pip install XXX来安装一些软件包。Ubuntu的密码是xx。

3.您还可以使用Mininet VM https://github.com/mininet/mininet/wiki/Mininet-VM-Images。这更简单，但是这样就没有GUI了。

Mininet预排

一旦你有一个Mininet虚拟机，你应该完成以下部分的标准Mininet演练:

•除了“Start Wireshark”一节之外的所有第1部分

•第2部分的前四部分—“运行回归测试”、“更改拓扑大小和类型”、“链接变化”和“可调冗余”

•所有的第三部分

在某些时候，演练将讨论软件定义网络(SDN)和OpenFlow。我们稍后将讨论这些，所以您现在不需要理解它们的含义;你只需要知道如何运行和与Mininet交互。

作业的这一步你不需要提交任何东西。

________________________________________

________________________________________

第三步:在Mininet中测量

在作业的最后一步，您将使用您编写的工具(Iperfer)和标准延迟测量工具ping (ping度量RTT)来测量Mininet中的虚拟网络中的带宽和延迟。你必须在你的论文中包括一些实验的结果和下面问题的答案。您对这些问题的回答应该放在一个名为answers.txt的文件中。

阅读ping man页面，学习如何使用ping。

在运行Iperfer之前，必须在Mininet VM中安装Java。你可透过以下命令安装Java:

sudo apt-get更新

sudo apt-get安装openjdk-7-jdk

使用下面描述的拓扑运行Mininet的python脚本称为progAssign1_topo.py

Q1:链接延迟和吞吐量(必须按时面对面地向TA展示!)

要使用提供的拓扑运行Mininet，请使用sudo运行Python脚本progAssign1_topo.py:

sudo python progAssign1_topo.py

这将创建一个具有以下拓扑结构的网络:



主机(h1 - h6)用正方形表示，开关(s1 - s6)用圆形表示;图中的名称与Mininet中的主机和交换机的名称匹配。主机的IP地址为10.0.0.1到10.0.0.10;IP地址中的最后一个数字与主机号匹配。在Mininet中运行ping和Iperfer时，必须使用IP地址，而不是主机名。

首先，您应该测量交换机之间(L1 - L5)的五个独立链路中的每个链路的RTT和带宽。您应该使用20个包运行ping，并将每个链接上的度量结果存储在一个名为latency_L#的文件中。txt，用上面拓扑图中的链接号替换#。您应该运行Iperfer 20秒，并将每个链接上的度量结果存储在名为通put_l #的文件中。txt，用上面拓扑图中的链接号替换#。

Q2:路径延迟和吞吐量

现在，假设h1想要与h4通信。主机之间路径的预期延迟和吞吐量是多少?把你的预测放在你的answer .txt文件中。

使用ping和Iperfer测量h1和h4之间的延迟和吞吐量。哪个主机是客户机，哪个主机是服务器并不重要。使用与上面相同的参数(20个包/ 20秒)，并将输出存储在名为latency_Q2.txt和通put_q2 .txt的文件中。将平均RTT和测量的吞吐量放入answers.txt文件中，并解释结果。如果你的预测是错误的，解释原因。

多路复用的效果

接下来，假设连接到s1的多个主机希望同时与连接到s4的主机进行通信。当两对主机同时通信时，预期的延迟和吞吐量是多少?三双吗?把你的预测放在你的answer .txt文件中。

使用ping和Iperfer测量同时通信的两对主机的延迟和吞吐量;只要其中一对主机连接到s1，另一对连接到s4，那么哪对主机正在通信并不重要。使用与上面相同的参数。您不需要提交原始输出，但是您应该将每对的平均RTT和测量吞吐量放在answers.txt文件中，并解释结果。如果你的预测是错误的，解释原因。

对同时通信的三对主机重复上述操作。

问题4:延迟的影响

最后，假设h1想与h4通信，而h5想与h6通信。每对的预期延迟和吞吐量是多少?把你的预测放在你的answer .txt文件中。

使用ping和Iperfer进行测量，将输出存储在名为latency_h1-h4的文件中。txt, latency_h5-h6。txt, throughput_h1-h4。和吞吐量h5-h6.txt。将平均RTT和测量的吞吐量放入answers.txt文件中，并解释结果。如果你的预测是错误的，解释原因。

________________________________________

提交说明

你必须提交:

•Iperfer的源代码

•测量结果和第三步问题的答案——所有结果和名为answers.txt的文本文件应该放在名为measurement的文件夹中

•解释如何运行代码的自述文件。

您必须提交一个名为assign1_username1_username2的tar文件，其中包含上述内容。请每个组只提交一个tar文件。

________________________________________

分级

1)正确性80%。

Iperfer 40

测量40

2)answers.txt 15%

3)代码质量5%(请勿抄袭!)

使代码更具可读性。

________________________________________

确认

我们承认CS 640:威斯康辛大学麦迪逊分校的计算机网络。